version: '3.8'
services:
  rabbitmq:
    image: rabbitmq:3-management
    ports:
      - "5672:5672" # Porta padrÃ£o do RabbitMQ
      - "15672:15672" # Porta da interface web do RabbitMQ
    volumes:
      - rabbitmq_data:/var/lib/rabbitmq
    environment:
      RABBITMQ_DEFAULT_USER: user
      RABBITMQ_DEFAULT_PASS: password
    # command: >
    #   bash -c " rabbitmq-plugins enable rabbitmq_management && rabbitmqctl wait --timeout 60 $${RABBITMQ_PID_FILE} && rabbitmqctl add_vhost my_vhost && rabbitmqctl set_permissions -p my_vhost user '.*' '.*' '.*' && rabbitmqctl set_policy -p my_vhost RetryPolicy '.*' '{\"dead-letter-exchange\":\"dlx\",\"message-ttl\":60000,\"queue-mode\":\"lazy\"}' --apply-to queues && rabbitmqctl set_policy -p my_vhost DLXPolicy '.*' '{\"dead-letter-exchange\":\"\",\"message-ttl\":600000}' --apply-to queues "

  db:
    image: postgres:latest
    ports:
      - "5432:5432"
    environment:
      POSTGRES_DB: fast-food
      POSTGRES_USER: user
      POSTGRES_PASSWORD: password
    volumes:
      - db_data:/var/lib/postgresql/data
    healthcheck:
      test: [ 'CMD-SHELL', 'pg_isready -U fast-food' ]
      interval: 10s
      timeout: 5s
      retries: 5

  orders-app:
    build: ./orders
    ports:
      - "3333:3333"
    environment:
      DATABASE_URL: postgres://user:password@db/dbname
      RABBITMQ_URL: amqp://user:password@rabbitmq
    volumes:
      - ./orders:/usr/src/app
    depends_on:
      - db
      - rabbitmq

  kitchen-app:
    build: ./kitchen
    ports:
      - "3334:3334"
    environment:
      RABBITMQ_URL: amqp://user:password@rabbitmq
    volumes:
      - ./kitchen:/usr/src/app
    depends_on:
      - db
      - rabbitmq

volumes:
  rabbitmq_data:
  db_data:
